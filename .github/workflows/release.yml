name: Release

on:
  release:
    types:
      - published

defaults:
  run:
    shell: bash

jobs:
  linux:
    name: Linux (${{ matrix.arch }})

    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86
          - x64

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Dependencies (x86)
        if: matrix.arch == 'x86'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install --allow-downgrades libpcre2-8-0=10.34-7
          sudo apt install g++-multilib libsdl2-dev:i386 zlib1g-dev:i386

      - name: Dependencies (x64)
        if: matrix.arch == 'x64'
        run: |
          sudo apt update
          sudo apt install libsdl2-dev zlib1g-dev

      - name: Cache cmake build
        uses: actions/cache@v3
        with:
          path: build
          key: linux-${{ matrix.arch }}-cmake-v1

      - name: Configure (x86)
        if: matrix.arch == 'x86'
        run: |
          cmake \
            -B build \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            -D CMAKE_TOOLCHAIN_FILE=cmake/toolchain/Linux32.cmake \
            # EOL

      - name: Configure (x64)
        if: matrix.arch == 'x64'
        run: |
          cmake \
            -B build \
            -D CMAKE_BUILD_TYPE=RelWithDebInfo \
            # EOL

      - name: Build
        run: |
          cmake \
            --build build \
            -j $(nproc) \
            # EOL

      - name: Upload
        run: |
          cd build
          tar -czvf fallout-ce-linux-${{ matrix.arch }}.tar.gz fallout-ce
          gh release upload ${{ github.ref_name }} fallout-ce-linux-${{ matrix.arch }}.tar.gz
          rm fallout-ce-linux-${{ matrix.arch }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
